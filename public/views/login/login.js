/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!*************************************!*\
  !*** ./resources/js/views/login.js ***!
  \*************************************/
$(function () {
  // LOCK/UNLOCK VIEW
  var loginWrapper = $(".login-card");
  var lockView = $(".login-card #lock-view");
  var loginCard = $("#login-form");
  var loginCardComp = loginCard.find("*");
  lockView.on('click', function (e) {
    var obj = $(e.currentTarget);
    obj.toggleClass("locked unlocked").trigger("classChange");
    if (obj.hasClass("locked")) {
      loginWrapper.addClass("show");
      loginCard.addClass("show");
    } else if (obj.hasClass("unlocked")) {
      loginWrapper.removeClass("show");
      loginCard.removeClass("show");
    }
  });

  // BLUR CONTROLLER
  var leftHemi = $("#left-hemisphere");
  loginCard.on("mouseover focus", function () {
    if (!loginCard.hasClass("show")) leftHemi.removeClass("unblur");
  }).on("mouseleave blur", function () {
    if (!loginCard.hasClass("show")) leftHemi.addClass("unblur");
  });
  loginCardComp.on("focus", function () {
    loginWrapper.addClass("show");
    loginCard.addClass("show");
  }).on("blur", function () {
    if (!lockView.hasClass("locked")) {
      loginWrapper.removeClass("show");
      loginCard.removeClass("show");
    }
  });
  lockView.on("classChange", function (e) {
    var obj = $(e.currentTarget);
    if (obj.hasClass("locked")) {
      leftHemi.removeClass("unblur");
    } else if (obj.hasClass("unlocked")) {
      leftHemi.addClass("unblur");
    }
  });

  // PASSWORD
  $(document).on('click', '#toggle-show-password, .toggle-show-password', function (e) {
    var obj = $(e.currentTarget);
    var target = $(obj.attr('data-target'));
    var icons = {
      show: obj.find('#show'),
      hide: obj.find('#hide')
    };
    if (target.attr('type') == 'password') {
      obj.attr('aria-label', 'Hide Password');
      target.attr('type', 'text');
      icons.show.removeClass('d-none');
      icons.hide.addClass('d-none');
    } else {
      obj.attr('aria-label', 'Show Password');
      target.attr('type', 'password');
      icons.show.addClass('d-none');
      icons.hide.removeClass('d-none');
    }
  });

  // FORGOT PASSWORD
  $('#forgotPassword').on('click', function (e) {
    var obj = $(e.currentTarget);
    var input = $('[name=email]');
    if (input.val().trim().length > 0) {
      var emailQuery = typeof input === 'undefined' ? "" : "?e=".concat(input.val());
      obj.attr('href', "".concat(obj.attr('href')).concat(emailQuery));
    }
  });
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VSxJQUFJLENBQUMsTUFBTSxLQUFBUyxNQUFBLENBQUtuQixHQUFHLENBQUNVLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBQVMsTUFBQSxDQUFHRCxVQUFVLENBQUUsQ0FBQztJQUNyRDtFQUNELENBQUMsQ0FBQztBQUNILENBQUMsQ0FBQyxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL3ZpZXdzL2xvZ2luLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIiQoKCkgPT4ge1xuXHQvLyBMT0NLL1VOTE9DSyBWSUVXXG5cdGNvbnN0IGxvZ2luV3JhcHBlciA9ICQoYC5sb2dpbi1jYXJkYCk7XG5cdGNvbnN0IGxvY2tWaWV3ID0gJChgLmxvZ2luLWNhcmQgI2xvY2stdmlld2ApO1xuXHRjb25zdCBsb2dpbkNhcmQgPSAkKGAjbG9naW4tZm9ybWApO1xuXHRjb25zdCBsb2dpbkNhcmRDb21wID0gbG9naW5DYXJkLmZpbmQoXCIqXCIpO1xuXG5cdGxvY2tWaWV3Lm9uKCdjbGljaycsIChlKSA9PiB7XG5cdFx0bGV0IG9iaiA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcblxuXHRcdG9iai50b2dnbGVDbGFzcyhgbG9ja2VkIHVubG9ja2VkYClcblx0XHRcdC50cmlnZ2VyKGBjbGFzc0NoYW5nZWApO1xuXG5cdFx0aWYgKG9iai5oYXNDbGFzcyhgbG9ja2VkYCkpIHtcblx0XHRcdGxvZ2luV3JhcHBlci5hZGRDbGFzcyhgc2hvd2ApO1xuXHRcdFx0bG9naW5DYXJkLmFkZENsYXNzKGBzaG93YCk7XG5cdFx0fVxuXHRcdGVsc2UgaWYgKG9iai5oYXNDbGFzcyhgdW5sb2NrZWRgKSkge1xuXHRcdFx0bG9naW5XcmFwcGVyLnJlbW92ZUNsYXNzKGBzaG93YCk7XG5cdFx0XHRsb2dpbkNhcmQucmVtb3ZlQ2xhc3MoYHNob3dgKTtcblx0XHR9XG5cdH0pO1xuXG5cdC8vIEJMVVIgQ09OVFJPTExFUlxuXHRsZXQgbGVmdEhlbWkgPSAkKGAjbGVmdC1oZW1pc3BoZXJlYCk7XG5cdGxvZ2luQ2FyZC5vbihgbW91c2VvdmVyIGZvY3VzYCwgKCkgPT4ge1xuXHRcdGlmICghbG9naW5DYXJkLmhhc0NsYXNzKGBzaG93YCkpXG5cdFx0XHRsZWZ0SGVtaS5yZW1vdmVDbGFzcyhgdW5ibHVyYCk7XG5cdH0pLm9uKGBtb3VzZWxlYXZlIGJsdXJgLCAoKSA9PiB7XG5cdFx0aWYgKCFsb2dpbkNhcmQuaGFzQ2xhc3MoYHNob3dgKSlcblx0XHRcdGxlZnRIZW1pLmFkZENsYXNzKGB1bmJsdXJgKTtcblx0fSk7XG5cblx0bG9naW5DYXJkQ29tcC5vbihgZm9jdXNgLCAoKSA9PiB7XG5cdFx0bG9naW5XcmFwcGVyLmFkZENsYXNzKGBzaG93YCk7XG5cdFx0bG9naW5DYXJkLmFkZENsYXNzKGBzaG93YCk7XG5cdH0pLm9uKGBibHVyYCwgKCkgPT4ge1xuXHRcdGlmICghbG9ja1ZpZXcuaGFzQ2xhc3MoYGxvY2tlZGApKSB7XG5cdFx0XHRsb2dpbldyYXBwZXIucmVtb3ZlQ2xhc3MoYHNob3dgKTtcblx0XHRcdGxvZ2luQ2FyZC5yZW1vdmVDbGFzcyhgc2hvd2ApO1xuXHRcdH1cblx0fSk7XG5cblx0bG9ja1ZpZXcub24oYGNsYXNzQ2hhbmdlYCwgKGUpID0+IHtcblx0XHRsZXQgb2JqID0gJChlLmN1cnJlbnRUYXJnZXQpO1xuXG5cdFx0aWYgKG9iai5oYXNDbGFzcyhgbG9ja2VkYCkpIHtcblx0XHRcdGxlZnRIZW1pLnJlbW92ZUNsYXNzKGB1bmJsdXJgKTtcblx0XHR9XG5cdFx0ZWxzZSBpZiAob2JqLmhhc0NsYXNzKGB1bmxvY2tlZGApKSB7XG5cdFx0XHRsZWZ0SGVtaS5hZGRDbGFzcyhgdW5ibHVyYCk7XG5cdFx0fVxuXHR9KTtcblxuXHQvLyBQQVNTV09SRFxuXHQkKGRvY3VtZW50KS5vbignY2xpY2snLCAnI3RvZ2dsZS1zaG93LXBhc3N3b3JkLCAudG9nZ2xlLXNob3ctcGFzc3dvcmQnLCAoZSkgPT4ge1xuXHRcdGxldCBvYmogPSAkKGUuY3VycmVudFRhcmdldCk7XG5cdFx0bGV0IHRhcmdldCA9ICQob2JqLmF0dHIoJ2RhdGEtdGFyZ2V0JykpO1xuXHRcdGxldCBpY29ucyA9IHtcblx0XHRcdHNob3c6IG9iai5maW5kKCcjc2hvdycpLFxuXHRcdFx0aGlkZTogb2JqLmZpbmQoJyNoaWRlJylcblx0XHR9XG5cblx0XHRpZiAodGFyZ2V0LmF0dHIoJ3R5cGUnKSA9PSAncGFzc3dvcmQnKSB7XG5cdFx0XHRvYmouYXR0cignYXJpYS1sYWJlbCcsICdIaWRlIFBhc3N3b3JkJyk7XG5cdFx0XHR0YXJnZXQuYXR0cigndHlwZScsICd0ZXh0Jyk7XG5cdFx0XHRpY29ucy5zaG93LnJlbW92ZUNsYXNzKCdkLW5vbmUnKTtcblx0XHRcdGljb25zLmhpZGUuYWRkQ2xhc3MoJ2Qtbm9uZScpO1xuXHRcdH1cblx0XHRlbHNlIHtcblx0XHRcdG9iai5hdHRyKCdhcmlhLWxhYmVsJywgJ1Nob3cgUGFzc3dvcmQnKTtcblx0XHRcdHRhcmdldC5hdHRyKCd0eXBlJywgJ3Bhc3N3b3JkJyk7XG5cdFx0XHRpY29ucy5zaG93LmFkZENsYXNzKCdkLW5vbmUnKTtcblx0XHRcdGljb25zLmhpZGUucmVtb3ZlQ2xhc3MoJ2Qtbm9uZScpO1xuXHRcdH1cblx0fSk7XG5cblx0Ly8gRk9SR09UIFBBU1NXT1JEXG5cdCQoJyNmb3Jnb3RQYXNzd29yZCcpLm9uKCdjbGljaycsIChlKSA9PiB7XG5cdFx0bGV0IG9iaiA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcblx0XHRsZXQgaW5wdXQgPSAkKCdbbmFtZT1lbWFpbF0nKTtcblxuXHRcdGlmIChpbnB1dC52YWwoKS50cmltKCkubGVuZ3RoID4gMCkge1xuXHRcdFx0bGV0IGVtYWlsUXVlcnkgPSB0eXBlb2YgaW5wdXQgPT09ICd1bmRlZmluZWQnID8gYGAgOiBgP2U9JHtpbnB1dC52YWwoKX1gO1xuXG5cdFx0XHRvYmouYXR0cignaHJlZicsIGAke29iai5hdHRyKCdocmVmJyl9JHtlbWFpbFF1ZXJ5fWApO1xuXHRcdH1cblx0fSk7XG59KTtcbiJdLCJuYW1lcyI6WyIkIiwibG9naW5XcmFwcGVyIiwibG9ja1ZpZXciLCJsb2dpbkNhcmQiLCJsb2dpbkNhcmRDb21wIiwiZmluZCIsIm9uIiwiZSIsIm9iaiIsImN1cnJlbnRUYXJnZXQiLCJ0b2dnbGVDbGFzcyIsInRyaWdnZXIiLCJoYXNDbGFzcyIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiLCJsZWZ0SGVtaSIsImRvY3VtZW50IiwidGFyZ2V0IiwiYXR0ciIsImljb25zIiwic2hvdyIsImhpZGUiLCJpbnB1dCIsInZhbCIsInRyaW0iLCJsZW5ndGgiLCJlbWFpbFF1ZXJ5IiwiY29uY2F0Il0sInNvdXJjZVJvb3QiOiIifQ==