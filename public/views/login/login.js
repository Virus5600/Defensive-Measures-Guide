/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!*************************************!*\
  !*** ./resources/js/views/login.js ***!
  \*************************************/
$(function () {
  // LOCK/UNLOCK VIEW
  var loginWrapper = $(".login-card");
  var lockView = $(".login-card #lock-view");
  var loginCard = $("#login-form");
  var loginCardComp = loginCard.find("*");
  lockView.on('click', function (e) {
    var obj = $(e.currentTarget);
    obj.toggleClass("locked unlocked").trigger("classChange");
    if (obj.hasClass("locked")) {
      loginWrapper.addClass("show");
      loginCard.addClass("show");
    } else if (obj.hasClass("unlocked")) {
      loginWrapper.removeClass("show");
      loginCard.removeClass("show");
    }
  });

  // BLUR CONTROLLER
  var leftHemi = $("#left-hemisphere");
  loginCard.on("mouseover focus", function () {
    if (!loginCard.hasClass("show")) leftHemi.removeClass("unblur");
  }).on("mouseleave blur", function () {
    if (!loginCard.hasClass("show")) leftHemi.addClass("unblur");
  });
  loginCardComp.on("focus", function () {
    loginWrapper.addClass("show");
    loginCard.addClass("show");
  }).on("blur", function () {
    loginWrapper.removeClass("show");
    loginCard.removeClass("show");
  });
  lockView.on("classChange", function (e) {
    var obj = $(e.currentTarget);
    if (obj.hasClass("locked")) {
      leftHemi.removeClass("unblur");
    } else if (obj.hasClass("unlocked")) {
      leftHemi.addClass("unblur");
    }
  });

  // PASSWORD
  $(document).on('click', '#toggle-show-password, .toggle-show-password', function (e) {
    var obj = $(e.currentTarget);
    var target = $(obj.attr('data-target'));
    var icons = {
      show: obj.find('#show'),
      hide: obj.find('#hide')
    };
    if (target.attr('type') == 'password') {
      obj.attr('aria-label', 'Hide Password');
      target.attr('type', 'text');
      icons.show.removeClass('d-none');
      icons.hide.addClass('d-none');
    } else {
      obj.attr('aria-label', 'Show Password');
      target.attr('type', 'password');
      icons.show.addClass('d-none');
      icons.hide.removeClass('d-none');
    }
  });

  // FORGOT PASSWORD
  $('#forgotPassword').on('click', function (e) {
    var obj = $(e.currentTarget);
    var input = $('[name=email]');
    if (input.val().trim().length > 0) {
      var emailQuery = typeof input === 'undefined' ? "" : "?e=".concat(input.val());
      obj.attr('href', "".concat(obj.attr('href')).concat(emailQuery));
    }
  });
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUMsTUFBTSxDQUFDLEVBQUFTLE1BQUEsQ0FBR0QsVUFBVSxDQUFFLENBQUM7SUFDckQ7RUFDRCxDQUFDLENBQUM7QUFDSCxDQUFDLENBQUMsQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy92aWV3cy9sb2dpbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIkKCgpID0+IHtcblx0Ly8gTE9DSy9VTkxPQ0sgVklFV1xuXHRjb25zdCBsb2dpbldyYXBwZXIgPSAkKGAubG9naW4tY2FyZGApO1xuXHRjb25zdCBsb2NrVmlldyA9ICQoYC5sb2dpbi1jYXJkICNsb2NrLXZpZXdgKTtcblx0Y29uc3QgbG9naW5DYXJkID0gJChgI2xvZ2luLWZvcm1gKTtcblx0Y29uc3QgbG9naW5DYXJkQ29tcCA9IGxvZ2luQ2FyZC5maW5kKFwiKlwiKTtcblxuXHRsb2NrVmlldy5vbignY2xpY2snLCAoZSkgPT4ge1xuXHRcdGxldCBvYmogPSAkKGUuY3VycmVudFRhcmdldCk7XG5cblx0XHRvYmoudG9nZ2xlQ2xhc3MoYGxvY2tlZCB1bmxvY2tlZGApXG5cdFx0XHQudHJpZ2dlcihgY2xhc3NDaGFuZ2VgKTtcblxuXHRcdGlmIChvYmouaGFzQ2xhc3MoYGxvY2tlZGApKSB7XG5cdFx0XHRsb2dpbldyYXBwZXIuYWRkQ2xhc3MoYHNob3dgKTtcblx0XHRcdGxvZ2luQ2FyZC5hZGRDbGFzcyhgc2hvd2ApO1xuXHRcdH1cblx0XHRlbHNlIGlmIChvYmouaGFzQ2xhc3MoYHVubG9ja2VkYCkpIHtcblx0XHRcdGxvZ2luV3JhcHBlci5yZW1vdmVDbGFzcyhgc2hvd2ApO1xuXHRcdFx0bG9naW5DYXJkLnJlbW92ZUNsYXNzKGBzaG93YCk7XG5cdFx0fVxuXHR9KTtcblxuXHQvLyBCTFVSIENPTlRST0xMRVJcblx0bGV0IGxlZnRIZW1pID0gJChgI2xlZnQtaGVtaXNwaGVyZWApO1xuXHRsb2dpbkNhcmQub24oYG1vdXNlb3ZlciBmb2N1c2AsICgpID0+IHtcblx0XHRpZiAoIWxvZ2luQ2FyZC5oYXNDbGFzcyhgc2hvd2ApKVxuXHRcdFx0bGVmdEhlbWkucmVtb3ZlQ2xhc3MoYHVuYmx1cmApO1xuXHR9KS5vbihgbW91c2VsZWF2ZSBibHVyYCwgKCkgPT4ge1xuXHRcdGlmICghbG9naW5DYXJkLmhhc0NsYXNzKGBzaG93YCkpXG5cdFx0XHRsZWZ0SGVtaS5hZGRDbGFzcyhgdW5ibHVyYCk7XG5cdH0pO1xuXG5cdGxvZ2luQ2FyZENvbXAub24oYGZvY3VzYCwgKCkgPT4ge1xuXHRcdGxvZ2luV3JhcHBlci5hZGRDbGFzcyhgc2hvd2ApO1xuXHRcdGxvZ2luQ2FyZC5hZGRDbGFzcyhgc2hvd2ApO1xuXHR9KS5vbihgYmx1cmAsICgpID0+IHtcblx0XHRsb2dpbldyYXBwZXIucmVtb3ZlQ2xhc3MoYHNob3dgKTtcblx0XHRsb2dpbkNhcmQucmVtb3ZlQ2xhc3MoYHNob3dgKTtcblx0fSk7XG5cblx0bG9ja1ZpZXcub24oYGNsYXNzQ2hhbmdlYCwgKGUpID0+IHtcblx0XHRsZXQgb2JqID0gJChlLmN1cnJlbnRUYXJnZXQpO1xuXG5cdFx0aWYgKG9iai5oYXNDbGFzcyhgbG9ja2VkYCkpIHtcblx0XHRcdGxlZnRIZW1pLnJlbW92ZUNsYXNzKGB1bmJsdXJgKTtcblx0XHR9XG5cdFx0ZWxzZSBpZiAob2JqLmhhc0NsYXNzKGB1bmxvY2tlZGApKSB7XG5cdFx0XHRsZWZ0SGVtaS5hZGRDbGFzcyhgdW5ibHVyYCk7XG5cdFx0fVxuXHR9KTtcblxuXHQvLyBQQVNTV09SRFxuXHQkKGRvY3VtZW50KS5vbignY2xpY2snLCAnI3RvZ2dsZS1zaG93LXBhc3N3b3JkLCAudG9nZ2xlLXNob3ctcGFzc3dvcmQnLCAoZSkgPT4ge1xuXHRcdGxldCBvYmogPSAkKGUuY3VycmVudFRhcmdldCk7XG5cdFx0bGV0IHRhcmdldCA9ICQob2JqLmF0dHIoJ2RhdGEtdGFyZ2V0JykpO1xuXHRcdGxldCBpY29ucyA9IHtcblx0XHRcdHNob3c6IG9iai5maW5kKCcjc2hvdycpLFxuXHRcdFx0aGlkZTogb2JqLmZpbmQoJyNoaWRlJylcblx0XHR9XG5cblx0XHRpZiAodGFyZ2V0LmF0dHIoJ3R5cGUnKSA9PSAncGFzc3dvcmQnKSB7XG5cdFx0XHRvYmouYXR0cignYXJpYS1sYWJlbCcsICdIaWRlIFBhc3N3b3JkJyk7XG5cdFx0XHR0YXJnZXQuYXR0cigndHlwZScsICd0ZXh0Jyk7XG5cdFx0XHRpY29ucy5zaG93LnJlbW92ZUNsYXNzKCdkLW5vbmUnKTtcblx0XHRcdGljb25zLmhpZGUuYWRkQ2xhc3MoJ2Qtbm9uZScpO1xuXHRcdH1cblx0XHRlbHNlIHtcblx0XHRcdG9iai5hdHRyKCdhcmlhLWxhYmVsJywgJ1Nob3cgUGFzc3dvcmQnKTtcblx0XHRcdHRhcmdldC5hdHRyKCd0eXBlJywgJ3Bhc3N3b3JkJyk7XG5cdFx0XHRpY29ucy5zaG93LmFkZENsYXNzKCdkLW5vbmUnKTtcblx0XHRcdGljb25zLmhpZGUucmVtb3ZlQ2xhc3MoJ2Qtbm9uZScpO1xuXHRcdH1cblx0fSk7XG5cblx0Ly8gRk9SR09UIFBBU1NXT1JEXG5cdCQoJyNmb3Jnb3RQYXNzd29yZCcpLm9uKCdjbGljaycsIChlKSA9PiB7XG5cdFx0bGV0IG9iaiA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcblx0XHRsZXQgaW5wdXQgPSAkKCdbbmFtZT1lbWFpbF0nKTtcblxuXHRcdGlmIChpbnB1dC52YWwoKS50cmltKCkubGVuZ3RoID4gMCkge1xuXHRcdFx0bGV0IGVtYWlsUXVlcnkgPSB0eXBlb2YgaW5wdXQgPT09ICd1bmRlZmluZWQnID8gYGAgOiBgP2U9JHtpbnB1dC52YWwoKX1gO1xuXG5cdFx0XHRvYmouYXR0cignaHJlZicsIGAke29iai5hdHRyKCdocmVmJyl9JHtlbWFpbFF1ZXJ5fWApO1xuXHRcdH1cblx0fSk7XG59KTtcbiJdLCJuYW1lcyI6WyIkIiwibG9naW5XcmFwcGVyIiwibG9ja1ZpZXciLCJsb2dpbkNhcmQiLCJsb2dpbkNhcmRDb21wIiwiZmluZCIsIm9uIiwiZSIsIm9iaiIsImN1cnJlbnRUYXJnZXQiLCJ0b2dnbGVDbGFzcyIsInRyaWdnZXIiLCJoYXNDbGFzcyIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiLCJsZWZ0SGVtaSIsImRvY3VtZW50IiwidGFyZ2V0IiwiYXR0ciIsImljb25zIiwic2hvdyIsImhpZGUiLCJpbnB1dCIsInZhbCIsInRyaW0iLCJsZW5ndGgiLCJlbWFpbFF1ZXJ5IiwiY29uY2F0Il0sInNvdXJjZVJvb3QiOiIifQ==