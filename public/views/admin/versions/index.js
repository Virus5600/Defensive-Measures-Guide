/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!****************************************************!*\
  !*** ./resources/js/views/admin/versions/index.js ***!
  \****************************************************/
$(function () {
  // Onload handler
  window.history.replaceState({
    "content": $("#inner-content").html()
  }, "", window.location.href);

  // Filters submit handler
  $(document).on("submit", "#filters", function (e) {
    e.preventDefault();
    e.stopPropagation();
    var form = $(e.currentTarget);
    $.ajax({
      "url": form.attr("action"),
      "type": form.attr("method"),
      "data": form.serialize(),
      "success": function success(data) {
        data = new DOMParser().parseFromString(data, "text/html");
        data = data.querySelector("#inner-content");
        $("#inner-content").html(data.innerHTML);

        // History handler
        window.history.pushState({
          "content": $("#inner-content").html()
        }, "", window.location.href + "?" + form.serialize());
      }
    });
  });

  // Reset handler
  $(document).on("reset", "#filters", function (e) {
    var _obj$attr;
    var obj = $(e.currentTarget);
    $.ajax({
      "url": (_obj$attr = obj.attr("action")) !== null && _obj$attr !== void 0 ? _obj$attr : window.location.href.split("?")[0],
      "type": obj.attr("method"),
      "success": function success(data) {
        data = new DOMParser().parseFromString(data, "text/html");
        data = data.querySelector("#inner-content");
        filters = data.querySelector("#filters");
        $("#inner-content").html(data.innerHTML);
        $("#filters").html(filters.innerHTML);

        // History handler
        window.history.pushState({
          "content": $("#inner-content").html()
        }, "", window.location.href.split("?")[0]);
      }
    });
  });

  // Popstate handler
  $(window).on("popstate", function (e) {
    $("#inner-content").html($(e.originalEvent.state.content));
  });
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QixDQUFDLENBQUNJLElBQUksQ0FBQztRQUFDLENBQUMsRUFDdkMsRUFBRSxFQUNGSCxNQUFNLENBQUNJLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDb0IsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FDbEMsQ0FBQztNQUNGO0lBQ0QsQ0FBQyxDQUFDO0VBQ0gsQ0FBQyxDQUFDOztFQUVGO0VBQ0ExQixDQUFDLENBQUNDLE1BQU0sQ0FBQyxDQUFDTyxFQUFFLGFBQWEsVUFBQ0MsQ0FBQyxFQUFLO0lBQy9CVCxDQUFDLGlCQUFpQixDQUFDLENBQUNJLElBQUksQ0FBQ0osQ0FBQyxDQUFDUyxDQUFDLENBQUNtQixhQUFhLENBQUNDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDLENBQUM7RUFDM0QsQ0FBQyxDQUFDO0FBQ0gsQ0FBQyxDQUFDLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvdmlld3MvYWRtaW4vdmVyc2lvbnMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiJCgoKSA9PiB7XG5cdC8vIE9ubG9hZCBoYW5kbGVyXG5cdHdpbmRvdy5oaXN0b3J5LnJlcGxhY2VTdGF0ZShcblx0XHR7XCJjb250ZW50XCI6ICQoYCNpbm5lci1jb250ZW50YCkuaHRtbCgpfSxcblx0XHRcIlwiLFxuXHRcdHdpbmRvdy5sb2NhdGlvbi5ocmVmXG5cdCk7XG5cblx0Ly8gRmlsdGVycyBzdWJtaXQgaGFuZGxlclxuXHQkKGRvY3VtZW50KS5vbihgc3VibWl0YCwgYCNmaWx0ZXJzYCwgKGUpID0+IHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuXHRcdGxldCBmb3JtID0gJChlLmN1cnJlbnRUYXJnZXQpO1xuXG5cdFx0JC5hamF4KHtcblx0XHRcdFwidXJsXCI6IGZvcm0uYXR0cihgYWN0aW9uYCksXG5cdFx0XHRcInR5cGVcIjogZm9ybS5hdHRyKGBtZXRob2RgKSxcblx0XHRcdFwiZGF0YVwiOiBmb3JtLnNlcmlhbGl6ZSgpLFxuXHRcdFx0XCJzdWNjZXNzXCI6IChkYXRhKSA9PiB7XG5cdFx0XHRcdGRhdGEgPSBuZXcgRE9NUGFyc2VyKCkucGFyc2VGcm9tU3RyaW5nKGRhdGEsIGB0ZXh0L2h0bWxgKTtcblx0XHRcdFx0ZGF0YSA9IGRhdGEucXVlcnlTZWxlY3RvcihgI2lubmVyLWNvbnRlbnRgKTtcblxuXHRcdFx0XHQkKGAjaW5uZXItY29udGVudGApLmh0bWwoZGF0YS5pbm5lckhUTUwpO1xuXG5cdFx0XHRcdC8vIEhpc3RvcnkgaGFuZGxlclxuXHRcdFx0XHR3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoXG5cdFx0XHRcdFx0e1wiY29udGVudFwiOiAkKGAjaW5uZXItY29udGVudGApLmh0bWwoKX0sXG5cdFx0XHRcdFx0XCJcIixcblx0XHRcdFx0XHR3aW5kb3cubG9jYXRpb24uaHJlZiArIFwiP1wiICsgZm9ybS5zZXJpYWxpemUoKVxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9KTtcblxuXHQvLyBSZXNldCBoYW5kbGVyXG5cdCQoZG9jdW1lbnQpLm9uKGByZXNldGAsIGAjZmlsdGVyc2AsIChlKSA9PiB7XG5cdFx0bGV0IG9iaiA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcblxuXHRcdCQuYWpheCh7XG5cdFx0XHRcInVybFwiOiBvYmouYXR0cihgYWN0aW9uYCkgPz8gd2luZG93LmxvY2F0aW9uLmhyZWYuc3BsaXQoXCI/XCIpWzBdLFxuXHRcdFx0XCJ0eXBlXCI6IG9iai5hdHRyKGBtZXRob2RgKSxcblx0XHRcdFwic3VjY2Vzc1wiOiAoZGF0YSkgPT4ge1xuXHRcdFx0XHRkYXRhID0gbmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyhkYXRhLCBgdGV4dC9odG1sYCk7XG5cblx0XHRcdFx0ZGF0YSA9IGRhdGEucXVlcnlTZWxlY3RvcihgI2lubmVyLWNvbnRlbnRgKTtcblx0XHRcdFx0ZmlsdGVycyA9IGRhdGEucXVlcnlTZWxlY3RvcihgI2ZpbHRlcnNgKTtcblxuXHRcdFx0XHQkKGAjaW5uZXItY29udGVudGApLmh0bWwoZGF0YS5pbm5lckhUTUwpO1xuXHRcdFx0XHQkKGAjZmlsdGVyc2ApLmh0bWwoZmlsdGVycy5pbm5lckhUTUwpO1xuXG5cdFx0XHRcdC8vIEhpc3RvcnkgaGFuZGxlclxuXHRcdFx0XHR3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoXG5cdFx0XHRcdFx0e1wiY29udGVudFwiOiAkKGAjaW5uZXItY29udGVudGApLmh0bWwoKX0sXG5cdFx0XHRcdFx0XCJcIixcblx0XHRcdFx0XHR3aW5kb3cubG9jYXRpb24uaHJlZi5zcGxpdChcIj9cIilbMF1cblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHR9KTtcblx0fSk7XG5cblx0Ly8gUG9wc3RhdGUgaGFuZGxlclxuXHQkKHdpbmRvdykub24oYHBvcHN0YXRlYCwgKGUpID0+IHtcblx0XHQkKGAjaW5uZXItY29udGVudGApLmh0bWwoJChlLm9yaWdpbmFsRXZlbnQuc3RhdGUuY29udGVudCkpO1xuXHR9KTtcbn0pO1xuIl0sIm5hbWVzIjpbIiQiLCJ3aW5kb3ciLCJoaXN0b3J5IiwicmVwbGFjZVN0YXRlIiwiaHRtbCIsImxvY2F0aW9uIiwiaHJlZiIsImRvY3VtZW50Iiwib24iLCJlIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJmb3JtIiwiY3VycmVudFRhcmdldCIsImFqYXgiLCJhdHRyIiwic2VyaWFsaXplIiwic3VjY2VzcyIsImRhdGEiLCJET01QYXJzZXIiLCJwYXJzZUZyb21TdHJpbmciLCJxdWVyeVNlbGVjdG9yIiwiaW5uZXJIVE1MIiwicHVzaFN0YXRlIiwiX29iaiRhdHRyIiwib2JqIiwic3BsaXQiLCJmaWx0ZXJzIiwib3JpZ2luYWxFdmVudCIsInN0YXRlIiwiY29udGVudCJdLCJzb3VyY2VSb290IjoiIn0=